{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/TeamChannelPreview.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamChannelPreview = _ref => {\n  _s();\n\n  let {\n    channel,\n    type\n  } = _ref;\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n\n  const ChannelPreview = () => {\n    var _channel$data, _channel$data2;\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-preview__item\",\n      children: [\"# \", (channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name) || (channel === null || channel === void 0 ? void 0 : (_channel$data2 = channel.data) === null || _channel$data2 === void 0 ? void 0 : _channel$data2.id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this);\n  };\n\n  const DirectPreview = () => {\n    var _members$, _members$$user, _members$2, _members$2$user, _members$3, _members$3$user;\n\n    const members = Object.values(channel.state.members).filter(_ref2 => {\n      let {\n        user\n      } = _ref2;\n      return user.id !== client.userID;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__item single\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: (_members$ = members[0]) === null || _members$ === void 0 ? void 0 : (_members$$user = _members$.user) === null || _members$$user === void 0 ? void 0 : _members$$user.image,\n        name: (_members$2 = members[0]) === null || _members$2 === void 0 ? void 0 : (_members$2$user = _members$2.user) === null || _members$2$user === void 0 ? void 0 : _members$2$user.fullName,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_members$3 = members[0]) === null || _members$3 === void 0 ? void 0 : (_members$3$user = _members$3.user) === null || _members$3$user === void 0 ? void 0 : _members$3$user.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? 'channel-preview__wrapper__selected' : 'channel-preview__wrapper',\n    onClick: () => {\n      console.log(channel);\n    },\n    children: type === 'team' ? /*#__PURE__*/_jsxDEV(ChannelPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(DirectPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TeamChannelPreview, \"I+5cHmU07rT2SLsGmzPi6tpAK9Y=\", false, function () {\n  return [useChatContext];\n});\n\n_c = TeamChannelPreview;\nexport default TeamChannelPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamChannelPreview\");","map":{"version":3,"sources":["/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/TeamChannelPreview.js"],"names":["React","Avatar","useChatContext","TeamChannelPreview","channel","type","activeChannel","client","ChannelPreview","data","name","id","DirectPreview","members","Object","values","state","filter","user","userID","image","fullName","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,cAAhB,QAAqC,mBAArC;;;AAEA,MAAMC,kBAAkB,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAqB;AAC7C,QAAM;AAAED,IAAAA,OAAO,EAAEE,aAAX;AAA0BC,IAAAA;AAA1B,MAAoCL,cAAc,EAAxD;;AACA,QAAMM,cAAc,GAAG;AAAA;;AAAA,wBACnB;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA,uBACO,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEK,IAAT,gEAAeC,IAAf,MAAuBN,OAAvB,aAAuBA,OAAvB,yCAAuBA,OAAO,CAAEK,IAAhC,mDAAuB,eAAeE,EAAtC,CADP;AAAA;AAAA;AAAA;AAAA;AAAA,YADmB;AAAA,GAAvB;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,UAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAACY,KAAR,CAAcH,OAA5B,EAAqCI,MAArC,CAA4C;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAYA,IAAI,CAACP,EAAL,KAAYJ,MAAM,CAACY,MAA/B;AAAA,KAA5C,CAAhB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,KAAK,eAAKN,OAAO,CAAE,CAAF,CAAZ,gEAAK,UAAaK,IAAlB,mDAAK,eAAmBE,KADjC;AAEI,QAAA,IAAI,gBAAKP,OAAO,CAAE,CAAF,CAAZ,kEAAK,WAAaK,IAAlB,oDAAK,gBAAmBG,QAFhC;AAGI,QAAA,IAAI,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCAAIR,OAAO,CAAE,CAAF,CAAX,kEAAI,WAAaK,IAAjB,oDAAI,gBAAmBG;AAAvB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAbD;;AAeA,sBACI;AAAK,IAAA,SAAS,EACV,CAAAjB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEO,EAAT,OAAgBL,aAAhB,aAAgBA,aAAhB,uBAAgBA,aAAa,CAAEK,EAA/B,IACM,oCADN,GAEM,0BAHV;AAMA,IAAA,OAAO,EAAK,MAAM;AACdW,MAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACH,KARD;AAAA,cAUKC,IAAI,KAAK,MAAT,gBAAkB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAAsC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAV3C;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArCD;;GAAMF,kB;UACwCD,c;;;KADxCC,kB;AAyCN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport {Avatar, useChatContext} from 'stream-chat-react';\n\nconst TeamChannelPreview = ({channel, type }) => {\n    const { channel: activeChannel, client} = useChatContext();\n    const ChannelPreview = () => (\n        <p className=\"channel-preview__item\">\n            # {channel?.data?.name || channel?.data?.id}\n        </p>\n    );\n\n    const DirectPreview = () => {\n        const members = Object.values(channel.state.members).filter(({user}) => user.id !== client.userID);\n        return (\n            <div className=\"channel-preview__item single\">\n                <Avatar\n                    image = { members [0]?.user?.image}\n                    name = { members [0]?.user?.fullName}\n                    size={24}\n\n                />\n                <p>{members [0]?.user?.fullName}</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className={\n            channel?.id === activeChannel?.id\n                ? 'channel-preview__wrapper__selected'\n                : 'channel-preview__wrapper'\n                 \n        }\n        onClick = { () => {\n            console.log(channel);\n        }}\n        >\n            {type === 'team' ? <ChannelPreview/> : <DirectPreview/>}\n        </div>\n    );\n}\n\n\n\nexport default TeamChannelPreview;"]},"metadata":{},"sourceType":"module"}