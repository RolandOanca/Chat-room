{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/CreateChannel.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { userList } from './';\nimport { CloseCreateChannel } from '../assets';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelNameInput = _ref => {\n  _s();\n\n  let {\n    channelName,\n    setChannelName\n  } = _ref;\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n\n  const handlerChange = event => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-name-input__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: channelName,\n        onChange: handlerChange,\n        placeholder: \"channel-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChannelNameInput, \"2DN4jsq9AeS0EJIFLZg1HJgV7cU=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChannelNameInput;\n\nconst CreateChannel = _ref2 => {\n  _s2();\n\n  let {\n    createType,\n    setIsCreating\n  } = _ref2;\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userId || '']);\n  const [channelName, setChannelName] = useState('');\n\n  const CreateChannel = async e => {\n    e.preventDefault();\n\n    try {\n      const newChannel = await client.channel(createType, channelName, {\n        name: channelName,\n        members: setSelectedUsers\n      });\n      await newChannel.watch();\n      setChannelName('');\n      setIsCreating(false);\n      setSelectedUsers([client.userId]);\n      setActiveChannel(newChannel);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-channel__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-channel__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: createType === 'chat' ? 'Create new Channel' : 'Send a Direct Message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreateChannel, {\n        setIsCreating: setIsCreating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), createType === 'chat' && /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      setSelectedUsers: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-channel__button-wrapper\",\n      onClick: CreateChannel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createType === 'chat' ? 'Create Channel' : 'Create Meesage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(CreateChannel, \"6hI6rgwgoQe07S6Q0xeUg1Jzn7s=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = CreateChannel;\nexport default CreateChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"CreateChannel\");","map":{"version":3,"sources":["/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/CreateChannel.js"],"names":["React","useState","useChatContext","userList","CloseCreateChannel","UserList","ChannelNameInput","channelName","setChannelName","client","setActiveChannel","selectedUsers","setSelectedUsers","userID","handlerChange","event","preventDefault","target","value","CreateChannel","createType","setIsCreating","userId","e","newChannel","channel","name","members","watch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport {userList} from './'\nimport { CloseCreateChannel } from '../assets';\nimport UserList from './UserList';\n\n\nconst ChannelNameInput = ({channelName, setChannelName}) =>{\n    const {client, setActiveChannel} = useChatContext();\n\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n\n\n    const handlerChange = (event) => {\n\n        event.preventDefault();\n        setChannelName(event.target.value)\n    }\n\n    return (\n        <div>\n            <div className=\"channel-name-input__wrapper\">\n                <p>Name</p>\n                <input value={channelName} onChange={handlerChange} placeholder=\"channel-name\"/>\n                <p>Add Members</p>\n            </div>\n        </div>\n    )\n}\n\n\nconst CreateChannel = ({createType, setIsCreating}) => {\n\n    const {client, setActiveChannel} = useChatContext();\n\n    const [selectedUsers, setSelectedUsers] = useState([client.userId || '']);\n    const [channelName, setChannelName ] = useState('');\n\n    const CreateChannel = async (e) => {\n        e.preventDefault();\n        try {\n            const newChannel = await client.channel(createType, channelName, {name:channelName, members:setSelectedUsers\n            });\n            await newChannel.watch();\n            setChannelName('')\n            setIsCreating(false)\n            setSelectedUsers([client.userId])\n            setActiveChannel(newChannel);\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"create-channel__container\">\n            <div className=\"create-channel__header\">\n                <p>{createType === 'chat' ? 'Create new Channel': 'Send a Direct Message'}</p>\n                <CloseCreateChannel setIsCreating={setIsCreating} />\n            </div>\n            {createType ==='chat' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n            <UserList setSelectedUsers={setSelectedUsers}/>\n            <div className=\"create-channel__button-wrapper\" onClick={CreateChannel}>\n                <p>{createType === 'chat' ? 'Create Channel': 'Create Meesage'}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateChannel;"]},"metadata":{},"sourceType":"module"}