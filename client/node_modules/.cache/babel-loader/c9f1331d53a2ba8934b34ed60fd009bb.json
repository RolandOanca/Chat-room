{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/ChannelSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getChannel, useChatContext } from 'stream-chat-react';\nimport SearchIcon from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelSearch = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const getChannel = async text => {\n    try {// TODO: FETCH CHANNELS\n    } catch (error) {\n      setQuery('');\n    }\n  };\n\n  const onSearch = event => {\n    event.preventDefault();\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-search__input__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-search__input__icon\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: SearchIcon,\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"channel-search__input__text\",\n          placeholder: \"Search\",\n          type: \"text\",\n          value: query,\n          onChange: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChannelSearch, \"Bi0Erny5dq8gq5MgJUQTU8SsPe8=\");\n\n_c = ChannelSearch;\nexport default ChannelSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelSearch\");","map":{"version":3,"sources":["/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/ChannelSearch.js"],"names":["React","useState","useEffect","getChannel","useChatContext","SearchIcon","ChannelSearch","query","setQuery","loading","setLoading","text","error","onSearch","event","preventDefault","target","value","getChannels"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mBAA3C;AACA,OAAOC,UAAP,MAAuB,WAAvB;;;AAIA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAME,UAAU,GAAG,MAAOQ,IAAP,IAAgB;AAC/B,QAAG,CACC;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAND;;AAQA,QAAMK,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAACM,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAC,IAAAA,WAAW,CAACJ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AACH,GAND;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEZ,UAAV;AAAsB,UAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,SAAS,EAAC,6BADd;AAEI,UAAA,WAAW,EAAC,QAFhB;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAEE,KAJX;AAKI,UAAA,QAAQ,EAAEM;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CArCD;;GAAMP,a;;KAAAA,a;AAyCN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { getChannel, useChatContext } from 'stream-chat-react';\nimport SearchIcon from '../assets'\n\n\n\nconst ChannelSearch = () => {\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const getChannel = async (text) => {\n        try{\n            // TODO: FETCH CHANNELS\n        } catch (error) {\n            setQuery('');\n        }\n    }\n\n    const onSearch = (event) => {\n        event.preventDefault();\n\n        setLoading(true);\n        setQuery(event.target.value);\n        getChannels(event.target.value)\n    }\n\n\n    return (\n        <div className=\"channel-search__container\">\n            <div className=\"channel-search__input__wrapper\">\n                <div className=\"channel-search__input__icon\">\n                    <img src={SearchIcon} width=\"30\" ></img>\n                    <input \n                        className=\"channel-search__input__text\" \n                        placeholder=\"Search\"\n                        type=\"text\"\n                        value={query} \n                        onChange={onSearch}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default ChannelSearch;"]},"metadata":{},"sourceType":"module"}