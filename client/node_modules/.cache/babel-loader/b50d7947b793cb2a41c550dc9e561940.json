{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { InviteIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListContainer;\n\nconst UserItem = _ref2 => {\n  let {\n    user\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-item__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__name-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: user.image,\n        name: user.fullName || user.id,\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-item__name\",\n        children: [user.fullName || user.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = UserItem;\n\nconst UserList = () => {\n  _s();\n\n  var _user;\n\n  const {\n    client\n  } = useChatContext();\n  const [users, setUseres] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [lisyEmpty, setListEmpty] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userId\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n\n        if (response.users.length) {\n          setUseres(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__message\",\n      children: \"Loading users ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this) : (_user = user) === null || _user === void 0 ? void 0 : _user.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"coVn5IrpMy3c4aUO6bjSqF7yR8w=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = UserList;\nexport default UserList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"sources":["/Users/macbook/Documents/Personal projects/react/chat-room/client/src/components/UserList.js"],"names":["React","useState","useEffect","Avatar","useChatContext","InviteIcon","ListContainer","children","UserItem","user","image","fullName","id","UserList","client","users","setUseres","loading","setLoading","lisyEmpty","setListEmpty","getUsers","response","queryUsers","$ne","userId","limit","length","error","console","log","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\n\nimport { InviteIcon } from '../assets';\n\nconst ListContainer = ({children}) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className=\"user-list__header\">\n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n};\n\nconst UserItem = ({user}) => {\n    return (\n        <div className=\"user-item__wrapper\">\n            <div className=\"user-item__name-wrapper\">\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\n                <p className=\"user-item__name\">{user.fullName || user.id} </p>\n            </div>\n        </div>\n    )\n};\n\n\n\nconst UserList = () => {\n\n    const {client} = useChatContext();\n    const [users, setUseres] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [lisyEmpty, setListEmpty] = useState(false);\n\n\n\n    useEffect(()=> {\n       const getUsers = async () => {\n           if(loading) return;\n\n           setLoading(true);\n\n           try {\n                const response = await client.queryUsers(\n                    {id:{$ne: client.userId}},\n                    {id: 1 },\n                    {limit: 8 }\n                );\n                if(response.users.length) {\n                    setUseres(response.users)\n                } else {\n                    setListEmpty(true);\n                }\n           } catch (error) {\n               console.log(error);\n           }\n           setLoading(false);\n       }\n       if(client) getUsers()\n    },[])\n\n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading users ...\n            </div> : (\n                user?.map((user, i) => (\n                    <UserItem index={i} key = {user.id} user ={user}/>\n                ))\n            )}\n        </ListContainer>\n    );\n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}