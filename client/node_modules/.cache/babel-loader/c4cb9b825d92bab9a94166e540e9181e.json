{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Personal projects/react/chat-room/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelContainer, ChannelListContainer, Auth } from './components';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst apiKey = '2d8zvdpnaejp';\nconst authToken = cookies.get(\"token\");\nconst client = StreamChat.getInstance(apiKey);\n\nif (authToken) {\n  client.connectUser({\n    id: cookies.get('userId'),\n    name: cookies.get('username'),\n    fullName: cookies.get('fullName'),\n    image: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword'),\n    phoneNumber: cookies.get('phoneNumber')\n  }, authToken);\n}\n\nconst App = () => {\n  _s();\n\n  const [createType, setCreateType] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  if (!authToken) return /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      client: client,\n      theme: \"team light\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelListContainer, {\n        isCreating: isCreating,\n        setIsCreating: setIsCreating,\n        isEditing: isEditing,\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ShGhD4QBYV0nuWr2tNMbH2vxuRQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Documents/Personal projects/react/chat-room/client/src/App.js"],"names":["React","useState","StreamChat","Chat","Cookies","ChannelContainer","ChannelListContainer","Auth","cookies","apiKey","authToken","get","client","getInstance","connectUser","id","name","fullName","image","hashedPassword","phoneNumber","App","createType","setCreateType","isCreating","setIsCreating","isEditing","setIsEditing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,EAAiDC,IAAjD,QAA6D,cAA7D;AAEA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AAEA,MAAMK,MAAM,GAAG,cAAf;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAlB;AAEA,MAAMC,MAAM,GAAGV,UAAU,CAACW,WAAX,CAAuBJ,MAAvB,CAAf;;AAEA,IAAGC,SAAH,EAAc;AACZE,EAAAA,MAAM,CAACE,WAAP,CAAmB;AACjBC,IAAAA,EAAE,EAAEP,OAAO,CAACG,GAAR,CAAY,QAAZ,CADa;AAEjBK,IAAAA,IAAI,EAAER,OAAO,CAACG,GAAR,CAAY,UAAZ,CAFW;AAGjBM,IAAAA,QAAQ,EAAET,OAAO,CAACG,GAAR,CAAY,UAAZ,CAHO;AAIjBO,IAAAA,KAAK,EAAEV,OAAO,CAACG,GAAR,CAAY,WAAZ,CAJU;AAKjBQ,IAAAA,cAAc,EAAEX,OAAO,CAACG,GAAR,CAAY,gBAAZ,CALC;AAMjBS,IAAAA,WAAW,EAAEZ,OAAO,CAACG,GAAR,CAAY,aAAZ;AANI,GAAnB,EAQGD,SARH;AAWD;;AAED,MAAMW,GAAG,GAAE,MAAM;AAAA;;AAEf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;AAGA,MAAG,CAACS,SAAJ,EAAe,oBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEE,MAAd;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAA,8BACE,QAAC,oBAAD;AACE,QAAA,UAAU,EAAGY,UADf;AAEE,QAAA,aAAa,EAAGC,aAFlB;AAGE,QAAA,SAAS,EAAGC,SAHd;AAIE,QAAA,YAAY,EAAGC;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;GAAMN,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelContainer, ChannelListContainer, Auth } from './components';\n\nimport './App.css';\n\nconst cookies = new Cookies();\n\nconst apiKey = '2d8zvdpnaejp';\nconst authToken = cookies.get(\"token\");\n\nconst client = StreamChat.getInstance(apiKey);\n\nif(authToken) {\n  client.connectUser({\n    id: cookies.get('userId'),\n    name: cookies.get('username'),\n    fullName: cookies.get('fullName'),\n    image: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword'),\n    phoneNumber: cookies.get('phoneNumber')\n    \n  }, authToken)\n \n\n}\n\nconst App= () => {\n\n  const [createType, setCreateType] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  if(!authToken) return <Auth/>\n  \n  return (\n    <div className=\"app__wrapper\">\n      <Chat client={client} theme=\"team light\">\n        <ChannelListContainer \n          isCreating= {isCreating}\n          setIsCreating= {setIsCreating}\n          isEditing= {isEditing}\n          setIsEditing= {setIsEditing}\n        />\n\n        <ChannelContainer/>\n      </Chat>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}